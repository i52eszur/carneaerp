' Gambas module file

'' Función para acciones de Introduccion, Borrado y Actualizacion de los datos en la base de datos.<br>
'' Parametros:<br>
'' Sql --> donde introducimos la sentencia sql q ejecutar.

Public Sub In_Act_Bor(Sql As String)
  
  If Not FMain.Conexion_Base_Datos.Opened Then
    FMain.Conexion_Base_Datos.Open  
  Endif
  FMain.Conexion_Base_Datos.Exec(Sql)
  'FMain.Conexion_Base_Datos.Close
End

'' Funcion para comprobar que un dato existe en la base de datos.<br>
'' Parametros:<br>
''  Sql --> Sentencia select para comprobar la existencia dehttps://github.com/belmotek/gambas-enhanced-controlsl dato.<br>
'' Devuelve:<br>
''  True -->  Si existe el valor buscado<br>
''  False --> Si no esiste el valor buscado<br>

Public Function Comprobar_existe_dato(Sql As String) As Boolean
  
  Dim Resultado As Result
  Dim Validar As Boolean
  Validar = False
 
  If Not FMain.Conexion_Base_Datos.Opened Then
    FMain.Conexion_Base_Datos.Open  
  Endif
  
  Resultado = FMain.Conexion_Base_Datos.Exec(Sql)
  If Resultado.Count > 0 Then
    Validar = True
  Endif
  
  Return Validar
  'FMain.Conexion_Base_Datos.Close
End


'' Procedimiento  para rellenar con datos un combo box.<br>
'' Parametros:<br>
'' Sql --> donde introducimos la sentencia sql q ejecutar.<br>
'' Combobox_Trabajo --> Combobox a rrellenar.<br>
'' Campo --> Campo con que rellenar el Combobox.

Public Sub Llenar_Combobox(Sql As String, ByRef Combobox_Trabajo As ComboBox, Campo As String)
  Dim Result_Trabajo As Result
  
  Combobox_Trabajo.Clear
  'FMain.Conexion_Base_Datos.Close
  If Not FMain.Conexion_Base_Datos.Opened Then
    FMain.Conexion_Base_Datos.Open  
  Endif
  Result_Trabajo = FMain.Conexion_Base_Datos.Exec(Sql)
  Result_Trabajo.MoveFirst
  'Combobox_Trabajo.Add("")
  While Result_Trabajo.Available
    Combobox_Trabajo.Add(Result_Trabajo[Campo])
    Result_Trabajo.MoveNext
  Wend
  
  'Combobox_Trabajo.text = ""
  'FMain.Conexion_Base_Datos.Close
  
End


'' Procedimiento  para rellenar con datos un combo box.<br>
'' Parametros:<br>
'' Sql --> donde introducimos la sentencia sql q ejecutar.<br>
'' Listobox_Trabajo --> Listbox a rrellenar.<br>
'' Campo --> Campo con que rellenar el Combobox.

Public Sub Llenar_Listbox(Sql As String, ByRef Listbox_Trabajo As ListBox, Campo As String)
  Dim Result_Trabajo As Result
  
  Listbox_Trabajo.Clear
  
  
  If Not FMain.Conexion_Base_Datos.Opened Then
     FMain.Conexion_Base_Datos.Open  
  Endif
  
  Result_Trabajo = FMain.Conexion_Base_Datos.Exec(Sql)
  Result_Trabajo.MoveFirst
  While Result_Trabajo.Available
    Listbox_Trabajo.Add(Result_Trabajo[Campo])
    Result_Trabajo.MoveNext
  Wend
  
  'FMain.Conexion_Base_Datos.Close
  
  
End

'' Funcion para otener un dato de una tabla, devuelve el dato en un String.<br>
'' Parametros:<br>
''  Sql --> Sentencia select para comprobar la existencia del dato.<br>
''  Campo --> Campo para extraer su valor.<br>
'' Devuelve:<br>
''  El valor del campo<br>
''  
Public Function Obtener_Campo_Tabla(sql As String, Campo As String) As String
  Dim Valor_A_Devolver As String
  Dim Result_Trabajo As Result

  If Not FMain.Conexion_Base_Datos.Opened Then
    FMain.Conexion_Base_Datos.Open  
  Endif
  Result_Trabajo = FMain.Conexion_Base_Datos.Exec(Sql)
  Result_Trabajo.MoveFirst
  Valor_A_Devolver = Result_Trabajo[Campo]
  
  'FMain.Conexion_Base_Datos.Close
  Return Valor_A_Devolver
End


'' Funcion para comprobar si una tabla tiene datos o esta vacia. Para ello vamos a devolver el numero de elementos.< br >
'' Parametros:<br>
''  Sql --> Sentencia select para comprobar la existencia de datos en la tabla.<br>
'' Devuelve:<br>
''  El numero de elementos.


Public Function Tabla_Vacia(Sql As String) As Integer
  Dim N_filas As Integer
  Dim Result_Trabajo As Result
  N_filas = 0
  
  If Not FMain.Conexion_Base_Datos.Opened Then
    FMain.Conexion_Base_Datos.Open  
  Endif
  Result_Trabajo = FMain.Conexion_Base_Datos.Exec(Sql)
  N_filas = Result_Trabajo.Count
  Return N_filas
  'FMain.Conexion_Base_Datos.Close
End

'' Procediminento para eliminar un elemento de un combobox.<br>
'' Parametros_<br>
''  Combobox_Trabajo --> El combobox donde eliminar el elemento.<br>
''  Valor_Elimiar --> Elemento a eliminar.
Public Sub Elimirar_Elemento_ComboBox(ByRef Combobox_Trabajo As ComboBox, Valor_Eliminar As String)
  Dim i As Integer
  Dim Lista_Auxiliar As New String[]
  Dim Elementos_Combobox As Integer
  Dim Elementos_Lista As Integer
  Elementos_Combobox = Combobox_Trabajo.Count
  For i = 0 To Elementos_Combobox - 1
    If Combobox_Trabajo[i].Text = Valor_Eliminar Then
     Else 
      Lista_Auxiliar.Add(Combobox_Trabajo[i].Text)
    Endif
  Next
  Combobox_Trabajo.Clear
  Elementos_Lista = Lista_Auxiliar.Count
  
  For i = 0 To Elementos_Lista - 1
    Combobox_Trabajo.Add(Lista_Auxiliar[i])
  Next
End

'' Funcion que nos devuelve el vamor maximo de un campo en una tabla.<br>
'' Parametros_<br>
''  Sql --> Sentencia select que ordena la tabla por el un campo.<br>
''  Campo --> Campo que se desea el valor maximo.<br>
'' Devuelve:<br>
''  El valor maximo en formato String.
Public Function Valor_Maximo(Sql As String, Campo As String) As String
  Dim Valor_A_Devolver As String
  Dim Result_Trabajo As Result
  
  If Not FMain.Conexion_Base_Datos.Opened Then
    FMain.Conexion_Base_Datos.Open  
  Endif
  Result_Trabajo = FMain.Conexion_Base_Datos.Exec(Sql)
  Result_Trabajo.MoveLast
  Valor_A_Devolver = Result_Trabajo[Campo]
  'FMain.Conexion_Base_Datos.Close
  
  Return Valor_A_Devolver
  
End

'' Funcion para encriptar cadenas de caracteres:<br>
''  Parametros:<br>
''    modo --> Accion a realizar<br>
''              1 Encripta.<br>
''              2 Desencripta.<br>
''    skey --> Cadena a encriptar<br>
''  Devuelve : La cadena encriptado o desencriptada.
Public Function cripto(modo As Integer, skey As String) As String
    
  Dim cad, cad2 As String
  Dim $n, $i As Integer
  Dim ar As Variant[]
  Dim sus As String[]
 
  ar = [["·", "w"], ["$", "s"], [">", "S"], ["*", "f"], ["[", "A"], ["-", "m"], ["]", "X"], ["<", "f"], ["¡", "0"]] 'sustituimos algunos caracteres por otros al azar...¿?
  If modo = 1
        cad = Base64(skey)
        For $n = 0 To 3
            cad2 = ""
            For $i = Len(cad) To 1 Step -1
                cad2 &= Mid(cad, $i, 1)
            Next    
            cad = Base64(cad2)
        Next
        For Each sus In ar 
            cad = Replace(cad, sus[1], sus[0])
        Next
  Else If modo = 2
        For Each sus In ar
            skey = Replace(skey, sus[0], sus[1])
        Next
        cad = UnBase64(skey)
        For $n = 0 To 3
            cad2 = ""
            For $i = Len(cad) To 1 Step -1
                cad2 &= Mid(cad, $i, 1)
            Next
            cad = UnBase64(cad2)
        Next
   Endif
  Return cad 
    
End

'' Funcion para poner una fecha en formato DD/MM/AAAA <br>
''  Parametros:<br>
''    Fecha_Trabajo --> Fecha que devuelve un Datebox. La fecha la devuelve MM/DD/AAAA.<br>
''  Devuelve:<br>
''    Fecha en formato correcto DD/MM/AAAA

Public Function Fecha_Correcta(Fecha_Trabajo As String) As String
  Dim Fecha_Devuelta As String
  Dim Dia As String
  Dim Mes As String
  Dim Ano As String
  Dia = Mid(Fecha_Trabajo, 4, 2)
  Mes = Mid(Fecha_Trabajo, 1, 2)
  Ano = Mid(Fecha_Trabajo, 7, 4)
  Fecha_Devuelta = Dia & "/" & Mes & "/" & Ano
  Return Fecha_Devuelta
End

'' Funcion para calcular el numero de factura o albaran
'' Parametros:<br>
''    Tipo --> Tomara los siguientes valores<br>
''        A -- Albaran.<br>
''        F -- Factura.<br>
'' Devudelve: <br>
''      Numero De factura o albaran siguiente.

Public Function Calculo_Numero_FA(Tipo As String) As String
  
  Dim Ano As String
  Dim Numero As String
  Dim Aux As Integer
  Dim Nummero_Devuelto As String
  ano = Format(Now, "yy")
  
  If tipo = "F" Then
    If Utilidades.Tabla_Vacia("select * from facturas") > 0 Then
      numero = Utilidades.Valor_Maximo("select * from facturas order by 1", "numerofactura")
      aux = CInt(Mid(numero, 2, 9))
      Nummero_Devuelto = "F" & CInt(aux + 1)
    Else
      Nummero_Devuelto = "F" & ano & "0000001"
    Endif
  Else
    If Utilidades.Tabla_Vacia("select * from albaranes") > 0 Then
      numero = Utilidades.Valor_Maximo("select * from albaranes order by 1", "numeroalbaran")
      aux = CInt(Mid(numero, 2, 9))
      Nummero_Devuelto = "A" & CInt(aux + 1)
    Else
      Nummero_Devuelto = "A" & ano & "0000001"
    Endif
  Endif
  Return Nummero_Devuelto
End

'' Funcion que nos genera las facturas/albaranes para impresion<br>
''  Parametros:<br>
''    NumeroFactura --> Factura albaran que queremos impirimir.<br>
Public Sub Generar_Factura_Albaran(NumeroFactura As String)

  Dim Tipo As String
  Dim cadena As String
  Dim Sql As String
  Dim Sql_Cabecera As String
  Dim Sql_Linea As String
  Dim Cabecera As Result
  Dim Lineas As Result
  ' Variables Cabecera.
  Dim Domicilio As String
  Dim Poblacion As String
  Dim Provincia As String
  Dim CodigoPostal As String
  Dim RazonSocial As String
  Dim Fecha As String
  Dim Formapago As String
  Dim Nif As String
  Dim BaseImponible As String
  Dim DescuentoPP As String
  Dim DescuentoESP As String
  Dim ImporteDPP As String
  Dim ImporteDESP As String
  Dim Basemenosdescuento As Float
  Dim Iva As String
  Dim RE As String
  Dim ImporteIva As String
  Dim ImporteRE As String
  Dim Total As Float
  ' Variables lineas detalle
  Dim Articulo As String
  Dim Cantidad As String
  Dim Precio As String
  Dim Importe As String
  Dim Lote As String
  Dim Ruta_Generar_Factura_Albaran As String
  Tipo = Mid(NumeroFactura, 1, 1)
  If Tipo = "F" Then
    Sql_Cabecera = "select F.numerofactura,F.fecha,F.hora,F.base,F.iva,F.recargo,F.importeiva,F.importerecargo,F.fechacobro,F.descuentopp,F.importedescuentopp" &
    ",F.descuentoesp,F.importedescuentoesp,F.cobrada,F.formapago,F.vencimiento,F.contabilizada,F.total,C.razonsocial,V.nombre from facturas F left join clientes C on" &
    " F.cliente=C.codigocliente left join vendedor V on F.vendedor=V.codigovendedor where F.numerofactura='" & NumeroFactura & "'"
    Sql_Linea = "select L.numerofactura,L.linea,L.precio,L.peso,L.importe,L.lote,A.nombre from facturasdetalles L left join articulo A on L.articulo=A.codigoarticulo" &
      " where L.numerofactura='" & NumeroFactura & "'"
  Else  
    Sql_Cabecera = "select F.numeroalbaran,F.fecha,F.hora,F.base,F.iva,F.recargo,F.importeiva,F.importerecargo,F.fechacobro,F.descuentopp,F.importedescuentopp" &
    ",F.descuentoesp,F.importedescuentoesp,F.pagado,F.formapago,F.vencimiento,F.facturado,F.total,C.razonsocial,V.nombre from albaranes F left join clientes C on" &
    " F.cliente=C.codigocliente left join vendedor V on F.vendedor=V.codigovendedor where F.numeroalbaran='" & NumeroFactura & "'"
    Sql_Linea = "select L.numeroalbaran,L.linea,L.precio,L.peso,L.importe,L.lote,A.nombre from albaranesdetalle L left join articulo A on L.articulo=A.codigoarticulo" &
    " where L.numeroalbaran='" & NumeroFactura & "'"
  Endif
  
  FMain.Conexion_Base_Datos.Close
 ' If Not FMain.Conexion_Base_Datos.Opened Then
    FMain.Conexion_Base_Datos.Open  
  'Endif

  Cabecera = FMain.Conexion_Base_Datos.Exec(Sql_Cabecera)
  BaseImponible = Cabecera["F.base"] 
  DescuentoPP = Cabecera["F.descuentopp"] 
  DescuentoESP = Cabecera["F.descuentoesp"] 
  ImporteDPP = Cabecera["F.importedescuentopp"] 
  ImporteDESP = Cabecera["F.importedescuentoesp"] 
  Basemenosdescuento = CFloat(BaseImponible) - CFloat(ImporteDPP) - CFloat(ImporteDESP)
  Iva = Cabecera["F.iva"] 
  RE = Cabecera["F.recargo"]
  ImporteIva = Cabecera["F.importeiva"]
  ImporteRE = Cabecera["F.importerecargo"]
  Total = Cabecera["F.total"]
  RazonSocial = Cabecera["C.razonsocial"] 
  fecha = Cabecera["F.fecha"]
  Formapago = Cabecera["F.formapago"] 
  sql = "select direccion from clientes where razonsocial='" & RazonSocial & "'"
  Domicilio = Utilidades.Obtener_Campo_Tabla(sql, "direccion")
  sql = "select localidad from clientes where razonsocial='" & RazonSocial & "'"
  Poblacion = Utilidades.Obtener_Campo_Tabla(sql, "localidad")
  sql = "select provincia from clientes where razonsocial='" & RazonSocial & "'"
  provincia = Utilidades.Obtener_Campo_Tabla(sql, "provincia")
  sql = "select codigopostal from clientes where razonsocial='" & RazonSocial & "'"
  CodigoPostal = Utilidades.Obtener_Campo_Tabla(sql, "codigopostal")
  sql = "select nif from clientes where razonsocial='" & RazonSocial & "'"
  nif = Utilidades.Obtener_Campo_Tabla(sql, "nif")
  cadena = "<html><body>"
  cadena &= "<div><img src=\"" & FMain.CarpetaCarnea & "/logo/logo.png\" style=\" width:900px;height:200px;\"> </div><br><br>" 
  If tipo = "F" Then
    cadena &= "<div style=\"border:1px solid black; width:300px;float:left;\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;FACTURA <br>Factura Numero : </strong> " & NumeroFactura & "<br>"
  Else
    cadena &= "<div style=\"border:1px solid black; width:300px;float:left;\"><strong>&nbsp;&nbsp;&nbsp;&nbsp;ALBARAN <br>Albaran Numero : </strong> " & NumeroFactura & "<br>"
  Endif
  cadena &= "<strong>Fecha :</strong> " & fecha & " <br>"
  cadena &= "<strong>Forma Pago :</strong> " & Formapago & "</div>"
  cadena &= "<div style=\" width:500px;float:right;\"><strong>Cliente : </strong> " & RazonSocial & "<br>"
  cadena &= "<strong>Domicilio :</strong> " & Domicilio & " <br>"
  cadena &= "<strong>Poblacion :</strong> " & Poblacion & " <strong>Codigo Postal : </strong> " & CodigoPostal & "<br>"
  cadena &= "<strong>Provincia :</strong> " & provincia & " <br>"
  cadena &= "<strong>Nif :</strong> " & nif & " <br></div><br><br><br><br><br><br>"
  cadena &= "<br><br><div style=\" width:500px;clear:both;margin-top:.5em;\">"
  cadena &= " <table style=\"width:900px;border: 1px solid black;border-collapse: collapse;\"><tr><th>Concepto</th><th>Cantidad</th><th>Precio</th><th>Importe</th><th>Lote</th></tr>"
  fMain.Conexion_Base_Datos.Close
  FMain.Conexion_Base_Datos.Open
  'If Not FMain.Conexion_Base_Datos.Opened Then
   ' FMain.Conexion_Base_Datos.Open  
  'Endif
  Lineas = FMain.Conexion_Base_Datos.Exec(Sql_Linea)
  Lineas.MoveFirst
  While Lineas.Available
    Articulo = Lineas["A.nombre"]
    Precio = Lineas["L.precio"]
    Cantidad = Lineas["L.peso"]
    Importe = Lineas["L.importe"]
    Lote = Lineas["L.lote"]
    cadena &= " <tr style=\"border:1px solid black;\"><td>" & Articulo & "</td><td>" & cantidad & "</td><td>" & Precio & "</td><td>" & Importe & "</td><td>" & lote & "</td></tr>"
    lineas.MoveNext
  Wend
  cadena &= " </table></div><br><br><br><br><br><br><br><br><br><br>"
  cadena &= "<div style=\"border:1px solid black; width:300px;float:right;\">"
  cadena &= "Base Imponible :<strong> " & BaseImponible & "</strong> <br>"
  cadena &= "DTO. PP :<strong> " & DescuentoPP & "</strong>%<strong>&nbsp;&nbsp;&nbsp;" & ImporteDPP & "</strong><br>"
  cadena &= "DTO ESP :<strong> " & DescuentoESP & "</strong>%<strong>&nbsp;&nbsp;&nbsp;" & ImporteDESP & "</strong><br>"
  cadena &= "Base - Descuentos :<strong> " & Basemenosdescuento & "</strong> <br>"
  cadena &= "Iva :<strong> " & Iva & "</strong>%<strong>&nbsp;&nbsp;&nbsp;" & ImporteIva & "</strong><br>"
  cadena &= "Recargo :<strong> " & RE & "</strong>%<strong>&nbsp;&nbsp;&nbsp;" & ImporteRE & "</strong><br>"
  cadena &= "T O T A L :<strong> " & Total & " </strong><br>"
  cadena &= "</div></body></html>"
  If tipo = "F" Then
    If Not Exist(FMain.Carpetafacturas & "/" & RazonSocial) Then Mkdir FMain.Carpetafacturas & "/" & RazonSocial
    'If Not Exist(FMain.Carpetafacturas & "/" & RazonSocial & "/" & NumeroFactura) Then Mkdir FMain.Carpetafacturas & "/" & RazonSocial & "/" & NumeroFactura
    Ruta_Generar_Factura_Albaran = FMain.Carpetafacturas & "/" & RazonSocial & "/" & NumeroFactura
  Else
    If Not Exist(FMain.Carpetaalbaranes & "/" & RazonSocial) Then Mkdir FMain.Carpetaalbaranes & "/" & RazonSocial
    'If Not Exist(FMain.Carpetafacturas & "/" & RazonSocial & "/" & NumeroFactura) Then Mkdir FMain.Carpetafacturas & "/" & RazonSocial & "/" & NumeroFactura
    Ruta_Generar_Factura_Albaran = FMain.Carpetafacturas & "/" & RazonSocial & "/" & NumeroFactura
  Endif
  
  File.Save(Ruta_Generar_Factura_Albaran & ".html", cadena)
  
  'Exec ["wkhtmltopdf", Ruta_Generar_Factura_Albaran & ".html", Ruta_Generar_Factura_Albaran & ".pdf"] Wait
  'Exec ["evince", Ruta_Generar_Factura_Albaran & ".pdf"]
  FMain.FacturaAlbaranAMostrar = Ruta_Generar_Factura_Albaran 
  Frm_Mostrar_Factura.Show
  
  FMain.Conexion_Base_Datos.Close
End
